{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","hooks/http.hook.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/404.js","components/pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","Link","to","NavLink","end","style","_ref","isActive","color","_ref2","useMarvelService","loading","request","error","clearError","useHttp","setLoading","useState","setError","useCallback","async","url","method","arguments","length","undefined","body","headers","response","fetch","ok","Error","concat","status","data","json","e","message","_apiBase","_apiKey","_transformCharacter","char","id","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","_transformComic","comic","_comic$textObjects$","title","pageCount","language","textObjects","price","prices","getAllCharacters","offset","res","results","map","getCharacter","getAllComics","console","log","getComic","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","objectFit","View","imgStyle","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","characters","setCharacters","newItemLoading","setNewItemLoading","setOffset","charEnded","setCharEnded","onRequest","initial","onCharactersLoaded","newCharacters","ended","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","arr","i","tabIndex","ref","el","onCharSelected","onKeyDown","key","renderItems","disabled","Skeleton","_Fragment","resourceURI","CharInfo","charId","skeleton","ErrorBoundary","Component","constructor","state","componentDidCatch","errorInfo","this","setState","render","MainPage","selectedChar","decoration","AppBanner","avengers","avengersLogo","ComicsList","setComics","comicsEnded","setComicsEnded","onComicsLoaded","newComics","ComicsPage","Page404","replace","SingleComicPage","comicId","useParams","setComic","updateComic","onComicLoaded","App","Router","Routes","Route","element","ReactDOM","createRoot","document","getElementById"],"mappings":"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","file":"static/js/main.1c8bc980.chunk.js","sourcesContent":["import { Link, NavLink } from \"react-router-dom\";\nimport './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                            end \n                            style={({ isActive }) => ({color : isActive ? '#9f0013': 'inherit' })} \n                            to=\"/\">Characters</NavLink>\n                    </li>\n                    /\n                    <li><NavLink                              \n                            style={({ isActive }) => ({color : isActive ? '#9f0013': 'inherit' })} \n                            to=\"/comics\">Comics</NavLink>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useHttp } from \"../hooks/http.hook\";\r\n\r\nconst useMarvelService = () => {\r\n    const {loading, request, error, clearError} = useHttp();\r\n\r\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    const _apiKey = 'apikey=53ce06b11c9f1f53d6d3422ecf314d54';\r\n    const _baseOffset = 1;\r\n    \r\n   \r\n\r\n    const getAllCharacters = async (offset = _baseOffset) => {\r\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`); \r\n        return res.data.results.map(_transformCharacter);        \r\n    }\r\n\r\n    const getCharacter = async (id) => {\r\n        const res = await request(`${_apiBase}characters/${id}?&${_apiKey}`); \r\n        return _transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    const getAllComics = async (offset = 0) => {\r\n        console.log('getAllComics offset = ' + offset);\r\n        const res = await request(`${_apiBase}comics?limit=8&&offset=${offset}&${_apiKey}`);\r\n        return res.data.results.map(_transformComic);\r\n    }\r\n\r\n    const getComic = async (id) => {\r\n\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\treturn _transformComic(res.data.results[0]);\r\n\t};\r\n\r\n    const _transformCharacter = (char) => {               \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,255)}...` : 'There is no character discription',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage:char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n\r\n    const _transformComic = (comic) => {\r\n        return {\r\n            id: comic.id,\r\n            title: comic.title,\r\n            description: comic.description || \"There is no description\",\r\n            pageCount: comic.pageCount\t? `${comic.pageCount} p.` : \"No information about the number of pages\",\r\n            language: comic.textObjects[0]?.language || \"en-us\",\r\n            thumbnail: comic.thumbnail.path + '.' + comic.thumbnail.extension,\r\n            price: comic.prices[0].price ? `${comic.prices[0].price}$`: 'not available'         \r\n        }\r\n    }\r\n\r\n    return {loading, error, getAllCharacters, getCharacter, getAllComics, getComic, clearError}\r\n}\r\n\r\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n\tconst [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-type': 'aplication/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n            \r\n            if (!response.ok) {\r\n                throw new Error(`Couldn't fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n\r\n        } catch(e) {\r\n            setLoading(false)\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n\r\n        \r\n\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" \r\n                            begin=\"-0.875s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" begin=\"-0.75s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\"\r\n                            begin=\"-0.625s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                        attributeName=\"fillOpacity\" \r\n                        keyTimes=\"0;1\" \r\n                        dur=\"1s\" \r\n                        repeatCount=\"indefinite\" \r\n                        values=\"1;0\" \r\n                        begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\"\r\n                            begin=\"-0.5s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" \r\n                            begin=\"-0.375s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            src={img} alt='error'\r\n            style={\r\n                {\r\n                    display: \"block\", \r\n                    width: \"250px\",\r\n                    height: \"250px\",\r\n                    objectFit: \"contain\", \r\n                    margin: \"0 auto\"\r\n                }\r\n            }/>\r\n    )\r\n}\r\nexport default ErrorMessage;","import { useState, useEffect } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nconst RandomChar = () => {   \n    \n    const [char, setChar] = useState(null);    \n\n    const {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 60000);\n\n        return () => {\n            clearInterval(timerId)\n        }\n    }, []);\n\n    const onCharLoaded = (char) => {       \n        setChar(char);        \n    }    \n    \n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        \n        getCharacter(id).then(onCharLoaded);            \n    }\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n    \n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br/>\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button className=\"button button__main\" onClick={updateChar}>\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n            </div>\n        </div>\n    )\n\n}\n\nconst View = ({char}) => {\n    console.log(char);\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default RandomChar;","import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nconst CharList = (props) => {\n\t\n\tconst [characters, setCharacters] = useState([]);\t\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(210);\n\tconst [charEnded, setCharEnded] = useState(false);\n\t\n\tconst {loading, error, getAllCharacters} =  useMarvelService();\n\n\tuseEffect(() => {\n\t\tonRequest(offset, true);\n\t}, []);\t\t\n\n\tconst onRequest = (offset, initial) => {\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\t\t\t\n\t\tgetAllCharacters(offset)\n\t\t\t.then(onCharactersLoaded)\t\t\t\n\t}\n\t\n\n\tconst onCharactersLoaded = (newCharacters) => {\t\n\t\tlet ended = false;\n\n\t\tif (newCharacters.length < 9) {\n\t\t\tended = true;\n\t\t}\n\n\t\tsetCharacters(characters => [...characters, ...newCharacters]);\t\t\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended);\n\t}\t\n\n\tconst itemRefs = useRef([]);\n\t\n\tconst focusOnItem = (id) => {\n\t\titemRefs.current.forEach(item => item.classList.remove('char__item_selected'));\n        itemRefs.current[id].classList.add('char__item_selected');\n        itemRefs.current[id].focus();\n\t}\n\n\tfunction renderItems(arr) {\n\t\tconst items = arr.map((item, i) => {\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = {'objectFit' : 'contain'};\n\t\t\t}\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<li \n\t\t\t\t\tkey={item.id} \n\t\t\t\t\ttabIndex={0}\t\n\t\t\t\t\tref={el => itemRefs.current[i] = el}\t\t\t\n\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\t\n\t\t\t\t\t\tfocusOnItem(i);\n\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            props.onCharSelected(item.id);\n                            focusOnItem(i);\n                        }\n                    }}> \n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t </li>\n\t\t\t)\n\t\t\t\n\t\t});\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t{items}\n\t\t\t</ul>\n\t\t) \n\t}\n\n\tconst elements = renderItems(characters);\n\n\tconst errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\t\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{errorMessage}\n\t\t\t{spinner} \t\t\t\t\t\n\t\t\t{elements}\n\t\t\t\n\t\t\t<button \n\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\tdisabled={newItemLoading}\n\t\t\t\tstyle={{'display': charEnded ? 'none' : 'block'}}\n\t\t\t\tonClick={() => onRequest(offset)}>\n\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n\t\n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport useMarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nconst CharInfo = (props) => {\n    const [char, setChar] = useState(null);\n   \n\tconst {loading, error, getCharacter, clearError} = useMarvelService();\n\n    useEffect(() => {        \n        updateChar();\n    }, [props.charId]); \n    \n    const updateChar = () => { \n        const {charId} = props;        \n        if (!charId) {\n            return;\n        }\n        clearError();\n        getCharacter(charId)\n            .then(onCharLoaded)\n                       \n    }\n\n    const onCharLoaded = (char) => {               \n        setChar(char);       \n    }\n\n    const skeleton = char || loading || error ? null : <Skeleton/> \n    const errorMessage = error ? <ErrorMessage/> : null;\n    const spinner = loading ? <Spinner/> : null;\n    const content = !(loading || error || !char) ? <View char={char}/> : null;\n    \n    return (\n        <div className=\"char__info\">\n            {skeleton}\n            {errorMessage}\n            {spinner}\n            {content}\n        </div>\n    )\n   \n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;   \n    \n    let imgStyle = {'objectFit' : 'cover'};\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"abyss\" style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length === 0 ? 'There is no comics for this character' : null}\n                {\n                    comics.slice(0,10).map((item, i) => {                       \n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                <Link to={`/comics/${item.resourceURI.slice(-5)}`}>\n                                    {item.name}\n                                </Link>\n                                \n                            </li>\n                        )                                               \n                    })\n                }                \n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error);\r\n        console.log(errorInfo);\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage =() => {\r\n\r\n    const [selectedChar, setChar] = useState(null)\r\n  \r\n    const onCharSelected = (id) => {\r\n        setChar(id);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ErrorBoundary>\r\n                <RandomChar/>\r\n            </ErrorBoundary>                    \r\n            <div className=\"char__content\">\r\n                <ErrorBoundary>\r\n                    <CharList onCharSelected={onCharSelected}/>\r\n                </ErrorBoundary>                        \r\n                <ErrorBoundary>\r\n                    <CharInfo charId={selectedChar}/>\r\n                </ErrorBoundary>\r\n            </div> \r\n            <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainPage;","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\nexport default AppBanner;","import { useState, useEffect  } from 'react';\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport { Link } from 'react-router-dom';\n\nimport './comicsList.scss';\n\nconst ComicsList = () => {\n    const [comics, setComics] = useState([]);\n    const [newItemLoading, setNewItemLoading] = useState(false);\n    const [offset, setOffset] = useState(0);\n    const [comicsEnded, setComicsEnded] = useState(false);\n\n    const {loading, error, getAllComics} = useMarvelService();\n        \n    useEffect(() => {\n        onRequest(offset, true);\n    }, []);\n\n    const onRequest = (offset, initial) => {\t\n        initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t\t.then(onComicsLoaded);\t\t\n\t}\n\n    const onComicsLoaded = (newComics) => {\n        let ended = false;\n\n\t\tif (newComics.length < 9) {\n\t\t\tended = true;\n\t\t}\n        setComics(comics => [...comics, ...newComics]);\n        setNewItemLoading(newItemLoading => false);\n        setOffset(offset => offset + 8);\n        setComicsEnded(comicsEnded => ended);\n    }\n\n    function renderItems(arr) {\n        const items = arr.map((item, i) => {\n            return (\n                <li key={i}  className=\"comics__item\">\n                    <Link to={`/comics/${item.id}`}>\n                        <img src={item.thumbnail} alt={item.title} className=\"comics__item-img\"/>\n                        <div className=\"comics__item-name\">{item.title}</div>\n                        <div className=\"comics__item-price\">{item.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n        return (\n            <ul className=\"comics__grid\">\n                {items}   \n            </ul>\n        )\n    }\n    const elements = renderItems(comics);\n\n    const errorMessage = error ? <ErrorMessage/> : null;\n\tconst spinner = loading && !newItemLoading ? <Spinner/> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {errorMessage}\n\t\t\t{spinner} \n            {elements}            \n            <button \n                disabled={newItemLoading}\n                className=\"button button__main button__long\"\n                onClick={() => onRequest(offset)}\n                >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from \"../errorMessage/ErrorMessage\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Page404 = () => {\r\n    return (\r\n        <div>\r\n            <ErrorMessage/>\r\n            <p \r\n                style={{\r\n                    'textAlign':'center',\r\n                    'fontWeight': 'bold',\r\n                    'fontSize': '24px'\r\n                }}>\r\n                PAGE DOESN'T EXIST\r\n            </p>\r\n            <Link style={{\r\n                'display': 'block',\r\n                'textAlign':'center',\r\n                'fontWeight': 'bold',\r\n                'fontSize': '24px',\r\n                'margin': '30px'\r\n                }} \r\n                to=\"/\">BACK TO MAIN PAGE</Link>\r\n        </div>\r\n    )\r\n}\r\nexport default Page404;","import { useParams, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\n\r\nimport './singleComicPage.scss';\r\n\r\nconst SingleComicPage = () => {\r\n    const {comicId} = useParams();\r\n    const [comic, setComic] = useState(null);\r\n\r\n    const {loading, error, getComic, clearError} = useMarvelService();\r\n\r\n    useEffect(() => {        \r\n        updateComic();\r\n    }, [comicId]); \r\n    \r\n    const updateComic = () => {         \r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)                       \r\n    }\r\n\r\n    const onComicLoaded = (comic) => {               \r\n        setComic(comic);       \r\n    }    \r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content}\r\n        </>\r\n    )\r\n}\r\n\r\nconst View = ({comic}) => {\r\n    const {title, description, pageCount,thumbnail, language, price} = comic;\r\n    return (\r\n        <div className=\"single-comic\">\r\n            <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n            <div className=\"single-comic__info\">\r\n                <h2 className=\"single-comic__name\">{title}</h2>\r\n                <p className=\"single-comic__descr\">{description}</p>\r\n                <p className=\"single-comic__descr\">{pageCount}</p>\r\n                <p className=\"single-comic__descr\">Language: {language}</p>\r\n                <div className=\"single-comic__price\">{price}</div>\r\n            </div>\r\n            <Link to=\"/comics\" replace className=\"single-comic__back\">Back to all</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport { MainPage, ComicsPage, SingleComicPage } from \"../pages\";\n\nimport Page404 from \"../pages/404\";\n\n\nconst App = () => {\n        \n    return (\n        <Router>\n            <div className=\"app\">\n                <AppHeader/>\n                <main>                \n                    <Routes>\n                        <Route path=\"/\" element={<MainPage/>}/>                                                    \n                        <Route path=\"/comics\" element={<ComicsPage/>}/> \n                        <Route path=\"/comics/:comicId\" element={<SingleComicPage/>}/>\n                        <Route path=\"*\" element={<Page404/>}/>\n                    </Routes>\n                </main>\n            </div>\n        </Router>\n    )\n    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM\n\t.createRoot(document.getElementById('root'))\n\t.render(\n\t\t\n\t\t\t<App />\n\t\t\n\t);"],"sourceRoot":""}