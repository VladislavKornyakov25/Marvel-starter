{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","objectFit","RandomChar","Component","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","componentDidMount","componentWillUnmount","clearInterval","timerId","render","errorMessage","spinner","content","View","onClick","mjolnir","_ref","imgStyle","CharList","characters","newItemLoading","charEnded","myRef","React","createRef","onRequest","onCharactersLoading","onCharactersLoaded","newCharacters","ended","itemRefs","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","elements","i","tabIndex","props","onCharSelected","onKeyDown","e","key","disabled","Skeleton","_Fragment","CharInfo","charId","componentDidUpdate","prevProps","skeleton","ErrorBoundary","componentDidCatch","errorInfo","console","log","App","selectedChar","decoration","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6469f5aa.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { logDOM } from \"@testing-library/react\";\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=53ce06b11c9f1f53d6d3422ecf314d54';\r\n    _baseOffset = 210;\r\n    \r\n    getResource = async (url) => {              \r\n        const res = await fetch(url);\r\n        if (!res.ok) {\r\n            throw new Error(`Couldn't fetch ${url}, status: ${res.status}`);\r\n        }        \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`); \r\n        return res.data.results.map(this._transformCharacter);        \r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?&${this._apiKey}`); \r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {               \r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0,255)}...` : 'There is no character discription',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage:char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n                <g transform=\"rotate(0)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" \r\n                            begin=\"-0.875s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.875s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n                <g transform=\"rotate(45)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" begin=\"-0.75s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.75s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(50,80)\">\r\n                <g transform=\"rotate(90)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\"\r\n                            begin=\"-0.625s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                        attributeName=\"fillOpacity\" \r\n                        keyTimes=\"0;1\" \r\n                        dur=\"1s\" \r\n                        repeatCount=\"indefinite\" \r\n                        values=\"1;0\" \r\n                        begin=\"-0.625s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n                <g transform=\"rotate(135)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\"\r\n                            begin=\"-0.5s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.5s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(20,50.00000000000001)\">\r\n                <g transform=\"rotate(180)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n                        <animateTransform \r\n                            attributeName=\"transform\" \r\n                            type=\"scale\" \r\n                            begin=\"-0.375s\" \r\n                            values=\"1.5 1.5;1 1\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate \r\n                            attributeName=\"fillOpacity\" \r\n                            keyTimes=\"0;1\" \r\n                            dur=\"1s\" \r\n                            repeatCount=\"indefinite\" \r\n                            values=\"1;0\" \r\n                            begin=\"-0.375s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n                <g transform=\"rotate(225)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(49.99999999999999,20)\">\r\n                <g transform=\"rotate(270)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n            <g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n                <g transform=\"rotate(315)\">\r\n                    <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n                        <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n                    </circle>\r\n                </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img \r\n            src={img} alt='error'\r\n            style={\r\n                {\r\n                    display: \"block\", \r\n                    width: \"250px\",\r\n                    height: \"250px\",\r\n                    objectFit: \"contain\", \r\n                    margin: \"0 auto\"\r\n                }\r\n            }/>\r\n    )\r\n}\r\nexport default ErrorMessage;","import { Component } from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component {   \n    state = {\n        char: {},\n        loading: true,\n        error: false       \n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n        // this.timerId = setInterval(this.updateChar, 3000);\n    }\n    \n    componentWillUnmount() {\n        clearInterval(this.timerId);\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false            \n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({            \n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    render () {\n        const {char, loading, error} = this.state;\n\n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null;\n       \n        return (\n            <div className=\"randomchar\">\n               {errorMessage}\n               {spinner}\n               {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki} = char;\n    let imgStyle = {'objectFit' : 'cover'};\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">Homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default RandomChar;","import React, { Component } from 'react';\n\nimport PropTypes from 'prop-types'\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/Spinner';\nimport MarvelService from '../../services/MarvelService';\n\nimport './charList.scss';\n\nclass CharList extends Component {\n\tstate = {\n\t\tcharacters : [],\n\t\tloading: true,\n\t\terror: false,\n\t\tnewItemLoading: false,\n\t\toffset: 1541,\n\t\tcharEnded: false\t\t\n\t}\n\tmyRef = React.createRef();\n\n\tmarvelService = new MarvelService();\n\n\tcomponentDidMount() {\n\t\tthis.onRequest();\n\t}\n\n\tonRequest = (offset) => {\n\t\tthis.onCharactersLoading();\n\t\tthis.marvelService.getAllCharacters(offset)\n\t\t\t.then(this.onCharactersLoaded)\n\t\t\t.catch(this.onError)\n\t}\n\tonCharactersLoading = () => {\n\t\tthis.setState({\n\t\t\tnewItemLoading: true\n\t\t});\n\t}\n\n\tonCharactersLoaded = (newCharacters) => {\t\n\t\tlet ended = false;\n\t\tif (newCharacters.length < 9) {\n\t\t\tended = true;\n\t\t}\t\t\n\t\t\n\t\tthis.setState(({offset, characters}) => ({\n\t\t\tcharacters: [...characters, ...newCharacters],\n\t\t\tloading: false,\n\t\t\tnewItemLoading: false,\n\t\t\toffset: offset + 9,\n\t\t\tcharEnded: ended\n\t\t}));\n\t}\n\n\tonError = () => {\n\t\tthis.setState({\n\t\t\tloading: false,\n\t\t\terror: true\n\t\t});\n\t}\n\n\titemRefs = [];\n\n    setRef = (ref) => {\n        this.itemRefs.push(ref);\n    }\n\n\tfocusOnItem = (id) => {\n\t\tthis.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\n        this.itemRefs[id].classList.add('char__item_selected');\n        this.itemRefs[id].focus();\n\t}\n\n\trender() {\t\t\n\t\tconst {characters, loading, error, offset, newItemLoading, charEnded} = this.state;\n\t\t\n\t\tconst elements = characters.map((item, i) => {\n\t\t\tlet imgStyle = {'objectFit' : 'cover'};\n\t\t\tif (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n\t\t\t\timgStyle = {'objectFit' : 'contain'};\n\t\t\t}\n\t\t\t\n\t\t\treturn (\n\t\t\t\t<li \n\t\t\t\t\tkey={item.id} \n\t\t\t\t\ttabIndex={0}\t\n\t\t\t\t\tref={this.setRef}\t\t\t\n\t\t\t\t\tclassName=\"char__item\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tthis.props.onCharSelected(item.id);\t\n\t\t\t\t\t\tthis.focusOnItem(i);\n\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyDown={(e) => {\n                        if (e.key === ' ' || e.key === \"Enter\") {\n                            this.props.onCharSelected(item.id);\n                            this.focusOnItem(i);\n                        }\n                    }}> \n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t </li>\n\t\t\t)\n\t\t\t\n\t\t});\n\n\t\tconst errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? elements : null;\n\n\t\treturn (\n\t\t\t<div className=\"char__list\">\n\t\t\t\t<ul className=\"char__grid\">\n\t\t\t\t\t{errorMessage}\n\t\t\t\t\t{spinner} \t\t\t\t\t\n\t\t\t\t\t{content}                    \n\t\t\t\t</ul>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"button button__main button__long\"\n\t\t\t\t\tdisabled={newItemLoading}\n\t\t\t\t\tstyle={{'display': charEnded ? 'none' : 'block'}}\n\t\t\t\t\tonClick={() => this.onRequest(offset)}>\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Skeleton from '../skeleton/Skeleton'\n\nimport MarvelService from '../../services/MarvelService';\n\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n\t\tchar : null,\n\t\tloading: false,\n\t\terror: false \n\t}\n\n\tmarvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n    \n    updateChar = () => {\n        const {charId} = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService.getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError);            \n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            char, \n            loading: false            \n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({            \n            loading: false\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        });\n    }\n\n    render() {\n        const {char, loading, error} = this.state;\n\n        const skeleton = char || loading || error ? null : <Skeleton/> \n        const errorMessage = error ? <ErrorMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\n        \n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const {name, description, thumbnail, homepage, wiki, comics} = char;   \n    \n    let imgStyle = {'objectFit' : 'cover'};\n    \n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"abyss\" style={imgStyle}/>\n                    <div>\n                        <div className=\"char__info-name\">{name}</div>\n                        <div className=\"char__btns\">\n                            <a href={homepage} className=\"button button__main\">\n                                <div className=\"inner\">Homepage</div>\n                            </a>\n                            <a href={wiki} className=\"button button__secondary\">\n                                <div className=\"inner\">Wiki</div>\n                            </a>\n                        </div>\n                    </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length === 0 ? 'There is no comics for this character' : null}\n                {\n                    comics.slice(0,10).map((item, i) => {                       \n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name}\n                            </li>\n                        )                                               \n                    })\n                }                \n                \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error);\r\n        console.log(errorInfo);\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n        \r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    \n    state = {\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>                    \n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onCharSelected={this.onCharSelected}/>\n                        </ErrorBoundary>                        \n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    } \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n"],"sourceRoot":""}